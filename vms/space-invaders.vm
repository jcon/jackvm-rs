function Alien.init 3
push constant 0
pop static 0
push constant 1
pop static 1
push constant 2
pop static 2
push constant 6000
pop local 2
push constant 2
call Array.new 1
pop static 3
push constant 0
push static 3
add
push constant 961
neg
push constant 8185
neg
push constant 16381
neg
push constant 14749
neg
push constant 16381
neg
push constant 1633
neg
push constant 3505
neg
push constant 12301
neg
call Sprites.createSprite 8
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 1
push static 3
add
push constant 961
neg
push constant 8185
neg
push constant 16381
neg
push constant 14749
neg
push constant 16381
neg
push constant 3697
neg
push constant 6553
neg
push constant 3121
neg
call Sprites.createSprite 8
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 2
call Array.new 1
pop static 4
push constant 0
push static 4
add
push constant 1057
neg
push constant 4677
neg
push constant 6133
neg
push constant 7645
neg
push constant 8189
neg
push constant 4089
neg
push constant 1041
neg
push constant 2057
neg
call Sprites.createSprite 8
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 1
push static 4
add
push constant 1041
neg
push constant 545
neg
push constant 2033
neg
push constant 3545
neg
push constant 8189
neg
push constant 6133
neg
push constant 5141
neg
push constant 4965
neg
call Sprites.createSprite 8
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 2
call Array.new 1
pop static 5
push constant 0
push static 5
add
push constant 385
neg
push constant 961
neg
push constant 2017
neg
push constant 3505
neg
push constant 4081
neg
push constant 577
neg
push constant 1441
neg
push constant 2641
neg
call Sprites.createSprite 8
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 1
push static 5
add
push constant 385
neg
push constant 961
neg
push constant 2017
neg
push constant 3505
neg
push constant 4081
neg
push constant 1441
neg
push constant 2065
neg
push constant 1057
neg
call Sprites.createSprite 8
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 545
neg
push constant 4421
neg
push constant 2057
neg
push constant 1041
neg
push constant 12295
neg
push constant 1041
neg
push constant 2377
neg
push constant 4645
neg
call Sprites.createSprite 8
pop static 6
push constant 0
return
function Alien.new 0
push constant 2
call Memory.alloc 1
pop pointer 0
push argument 0
pop this 1
push constant 0
not
pop this 0
push pointer 0
return
function Alien.getOCTOPUS 0
push static 0
return
function Alien.getCRAB 0
push static 1
return
function Alien.getSQUID 0
push static 2
return
function Alien.dispose 0
push argument 0
pop pointer 0
push pointer 0
call Memory.deAlloc 1
pop temp 0
push constant 0
return
function Alien.drawXY 2
push argument 0
pop pointer 0
push this 0
not
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push argument 1
push argument 2
call Sprites.clearXY 2
pop temp 0
push constant 0
return
label IF_FALSE0
push constant 0
pop local 1
push argument 3
not
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push constant 1
pop local 1
label IF_FALSE1
push this 1
push static 0
eq
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push local 1
push static 3
add
pop pointer 1
push that 0
pop local 0
goto IF_END2
label IF_FALSE2
push this 1
push static 1
eq
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push local 1
push static 4
add
pop pointer 1
push that 0
pop local 0
goto IF_END3
label IF_FALSE3
push this 1
push static 2
eq
if-goto IF_TRUE4
goto IF_FALSE4
label IF_TRUE4
push local 1
push static 5
add
pop pointer 1
push that 0
pop local 0
label IF_FALSE4
label IF_END3
label IF_END2
push local 0
push argument 1
push argument 2
call Sprites.drawSprite 3
pop temp 0
push constant 0
return
function Alien.drawExplosionXY 0
push argument 0
pop pointer 0
push static 6
push argument 1
push argument 2
call Sprites.drawSprite 3
pop temp 0
push constant 0
return
function Alien.setAlive 0
push argument 0
pop pointer 0
push argument 1
pop this 0
push constant 0
return
function Alien.getIsAlive 0
push argument 0
pop pointer 0
push this 0
return
function Alien.getHitPoints 0
push argument 0
pop pointer 0
push this 1
push static 0
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 10
return
goto IF_END0
label IF_FALSE0
push this 1
push static 1
eq
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push constant 20
return
goto IF_END1
label IF_FALSE1
push this 1
push static 2
eq
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push constant 30
return
label IF_FALSE2
label IF_END1
label IF_END0
push constant 0
return
function AlienShot.init 0
push constant 0
pop static 7
push constant 1
pop static 8
push constant 2
pop static 9
push constant 3
pop static 10
push constant 4
pop static 11
push constant 0
pop static 0
push constant 1
pop static 1
push constant 3
pop static 2
push constant 4
call Array.new 1
pop static 3
push constant 0
push static 3
add
push constant 129
neg
push constant 129
neg
push constant 129
neg
push constant 129
neg
push constant 129
neg
push constant 449
neg
push constant 1
neg
push constant 1
neg
call Sprites.createSprite 8
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 1
push static 3
add
push constant 129
neg
push constant 129
neg
push constant 129
neg
push constant 449
neg
push constant 129
neg
push constant 129
neg
push constant 1
neg
push constant 1
neg
call Sprites.createSprite 8
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 2
push static 3
add
push constant 129
neg
push constant 129
neg
push constant 449
neg
push constant 129
neg
push constant 129
neg
push constant 129
neg
push constant 1
neg
push constant 1
neg
call Sprites.createSprite 8
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 3
push static 3
add
push constant 449
neg
push constant 129
neg
push constant 129
neg
push constant 129
neg
push constant 129
neg
push constant 129
neg
push constant 1
neg
push constant 1
neg
call Sprites.createSprite 8
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 4
call Array.new 1
pop static 4
push constant 0
push static 4
add
push constant 129
neg
push constant 129
neg
push constant 129
neg
push constant 129
neg
push constant 129
neg
push constant 129
neg
push constant 129
neg
push constant 1
neg
call Sprites.createSprite 8
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 1
push static 4
add
push constant 129
neg
push constant 129
neg
push constant 193
neg
push constant 385
neg
push constant 129
neg
push constant 193
neg
push constant 385
neg
push constant 1
neg
call Sprites.createSprite 8
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 2
push static 4
add
push constant 129
neg
push constant 129
neg
push constant 129
neg
push constant 129
neg
push constant 129
neg
push constant 129
neg
push constant 129
neg
push constant 1
neg
call Sprites.createSprite 8
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 3
push static 4
add
push constant 129
neg
push constant 129
neg
push constant 193
neg
push constant 385
neg
push constant 129
neg
push constant 193
neg
push constant 385
neg
push constant 1
neg
call Sprites.createSprite 8
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 4
call Array.new 1
pop static 5
push constant 0
push static 5
add
push constant 129
neg
push constant 65
neg
push constant 129
neg
push constant 257
neg
push constant 129
neg
push constant 65
neg
push constant 129
neg
push constant 1
neg
call Sprites.createSprite 8
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 1
push static 5
add
push constant 65
neg
push constant 129
neg
push constant 257
neg
push constant 129
neg
push constant 65
neg
push constant 129
neg
push constant 257
neg
push constant 1
neg
call Sprites.createSprite 8
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 2
push static 5
add
push constant 129
neg
push constant 257
neg
push constant 129
neg
push constant 65
neg
push constant 129
neg
push constant 257
neg
push constant 129
neg
push constant 1
neg
call Sprites.createSprite 8
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 3
push static 5
add
push constant 257
neg
push constant 129
neg
push constant 65
neg
push constant 129
neg
push constant 257
neg
push constant 129
neg
push constant 65
neg
push constant 1
neg
call Sprites.createSprite 8
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 2321
neg
push constant 1089
neg
push constant 2017
neg
push constant 4081
neg
push constant 4081
neg
push constant 2017
neg
push constant 577
neg
push constant 2193
neg
call Sprites.createSprite 8
pop static 6
push constant 0
return
function AlienShot.new 0
push constant 8
call Memory.alloc 1
pop pointer 0
push argument 0
pop this 4
push argument 1
pop this 5
push constant 1
pop this 6
push constant 0
pop this 3
push static 7
pop this 1
push argument 2
pop this 0
push constant 0
pop this 7
push this 0
push static 0
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push static 3
pop this 2
goto IF_END0
label IF_FALSE0
push this 0
push static 1
eq
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push static 4
pop this 2
goto IF_END1
label IF_FALSE1
push this 0
push static 2
eq
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push static 5
pop this 2
label IF_FALSE2
label IF_END1
label IF_END0
push pointer 0
return
function AlienShot.dispose 0
push argument 0
pop pointer 0
push pointer 0
call Memory.deAlloc 1
pop temp 0
push constant 0
return
function AlienShot.getPLUNGER 0
push static 0
return
function AlienShot.getROLLER 0
push static 1
return
function AlienShot.getSQUIGGLY 0
push static 2
return
function AlienShot.fire 0
push argument 0
pop pointer 0
push static 8
pop this 1
push argument 1
pop this 4
push argument 2
push constant 8
add
pop this 5
push constant 0
return
function AlienShot.getTicks 0
push argument 0
pop pointer 0
push this 7
return
function AlienShot.resetTicks 0
push argument 0
pop pointer 0
push constant 0
pop this 7
push constant 0
return
function AlienShot.tick 2
push argument 0
pop pointer 0
push constant 0
pop local 0
push this 1
push static 7
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
return
label IF_FALSE0
push this 1
push static 8
eq
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push static 9
pop this 1
push constant 0
pop this 7
push this 0
push static 1
eq
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push this 3
push this 2
add
pop pointer 1
push that 0
push this 4
push this 5
call Sprites.drawSpriteXOR 3
pop temp 0
goto IF_END2
label IF_FALSE2
push this 0
push static 0
eq
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push this 3
push this 2
add
pop pointer 1
push that 0
push this 4
push this 5
call Sprites.drawSpriteXOR 3
pop temp 0
goto IF_END3
label IF_FALSE3
push this 3
push this 2
add
pop pointer 1
push that 0
push this 4
push this 5
call Sprites.drawSpriteXOR 3
pop temp 0
label IF_END3
label IF_END2
push constant 0
return
label IF_FALSE1
push this 1
push static 9
eq
if-goto IF_TRUE4
goto IF_FALSE4
label IF_TRUE4
push this 7
push constant 1
add
pop this 7
push this 3
push this 2
add
pop pointer 1
push that 0
push this 4
push this 5
call Sprites.eraseSprite 3
pop temp 0
push this 5
push this 6
add
pop this 5
push this 5
push constant 8
add
call Constants.getEARTH_Y 0
gt
if-goto IF_TRUE5
goto IF_FALSE5
label IF_TRUE5
push static 10
pop this 1
call Constants.getEARTH_Y 0
push constant 7
sub
pop this 5
push constant 0
return
label IF_FALSE5
push this 3
push constant 1
add
push constant 4
call Util.mod 2
pop this 3
push this 3
push this 2
add
pop pointer 1
push that 0
push this 4
push this 5
call Sprites.drawSpriteXOR 3
pop local 0
push local 0
if-goto IF_TRUE6
goto IF_FALSE6
label IF_TRUE6
push static 10
pop this 1
push this 3
push this 2
add
pop pointer 1
push that 0
push this 4
push this 5
call Sprites.drawSpriteXOR 3
pop temp 0
push this 5
push constant 8
add
call Constants.getPLAYER_Y 0
push constant 1
sub
gt
push this 5
push constant 8
add
call Constants.getPLAYER_Y 0
push constant 8
add
lt
and
if-goto IF_TRUE7
goto IF_FALSE7
label IF_TRUE7
push constant 0
not
return
label IF_FALSE7
label IF_FALSE6
push constant 0
return
label IF_FALSE4
push this 1
push static 10
eq
if-goto IF_TRUE8
goto IF_FALSE8
label IF_TRUE8
push static 6
push this 4
push this 5
call Sprites.eraseSprite 3
pop temp 0
push static 11
pop this 1
push constant 0
return
label IF_FALSE8
push this 1
push static 11
eq
if-goto IF_TRUE9
goto IF_FALSE9
label IF_TRUE9
push static 6
push this 4
push this 5
call Sprites.eraseSprite 3
pop temp 0
push static 7
pop this 1
push constant 0
pop this 7
push constant 0
return
label IF_FALSE9
push local 0
return
function AlienShot.isActive 0
push argument 0
pop pointer 0
push this 1
push static 7
eq
not
return
function AlienShot.getX 0
push argument 0
pop pointer 0
push this 4
return
function AlienShot.getY 0
push argument 0
pop pointer 0
push this 5
return
function AlienShots.init 0
push constant 4
call Array.new 1
pop static 0
push constant 0
push static 0
add
push constant 9
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 1
push static 0
add
push constant 1
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 2
push static 0
add
push constant 5
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 3
push static 0
add
push constant 4
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 0
return
function AlienShots.new 0
push constant 5
call Memory.alloc 1
pop pointer 0
push constant 3
call Array.new 1
pop this 0
push constant 0
push this 0
add
push constant 224
push constant 2
call Math.divide 2
push constant 176
call AlienShot.getROLLER 0
call AlienShot.new 3
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 1
push this 0
add
push constant 224
push constant 2
call Math.divide 2
push constant 176
call AlienShot.getPLUNGER 0
call AlienShot.new 3
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 2
push this 0
add
push constant 224
push constant 2
call Math.divide 2
push constant 176
call AlienShot.getSQUIGGLY 0
call AlienShot.new 3
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 200
pop this 4
push constant 0
pop this 3
push constant 0
pop this 1
push constant 0
pop this 2
push pointer 0
return
function AlienShots.dispose 2
push argument 0
pop pointer 0
push constant 0
pop local 1
label WHILE_EXP0
push local 1
push constant 3
lt
not
if-goto WHILE_END0
push local 1
push this 0
add
pop pointer 1
push that 0
pop local 0
push local 0
call AlienShot.dispose 1
pop temp 0
push local 1
push constant 1
add
pop local 1
goto WHILE_EXP0
label WHILE_END0
push pointer 0
call Memory.deAlloc 1
pop temp 0
push constant 0
return
function AlienShots.resetShots 2
push argument 0
pop pointer 0
push constant 0
pop local 0
label WHILE_EXP0
push local 0
push constant 3
lt
not
if-goto WHILE_END0
push local 0
push this 0
add
pop pointer 1
push that 0
pop local 1
push local 1
call AlienShot.resetTicks 1
pop temp 0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function AlienShots.tick 4
push argument 0
pop pointer 0
push constant 8000
pop local 3
push this 3
push constant 1
add
pop this 3
push this 3
push this 4
gt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 80
pop this 4
push this 1
pop local 0
label WHILE_EXP0
push local 0
push constant 3
lt
not
if-goto WHILE_END0
push local 0
push this 0
add
pop pointer 1
push that 0
pop local 1
push local 1
call AlienShot.isActive 1
not
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push local 0
push constant 0
eq
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push argument 3
pop local 2
goto IF_END2
label IF_FALSE2
push this 2
push constant 1
add
pop this 2
call Constants.getSTART_X 0
push this 2
push constant 4
call Util.mod 2
push static 0
add
pop pointer 1
push that 0
push constant 16
call Math.multiply 2
add
pop local 2
label IF_END2
push local 1
push local 2
push argument 2
call AlienShot.fire 3
pop temp 0
push constant 0
pop this 3
push local 0
push constant 1
add
push constant 3
call Util.mod 2
pop this 1
push constant 3
pop local 0
label IF_FALSE1
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
label IF_FALSE0
push constant 0
pop local 0
label WHILE_EXP1
push local 0
push constant 3
lt
not
if-goto WHILE_END1
push local 0
push this 0
add
pop pointer 1
push that 0
pop local 1
push local 1
push argument 3
push argument 4
call AlienShot.tick 3
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push constant 260
pop this 4
push constant 0
not
return
label IF_FALSE3
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP1
label WHILE_END1
push constant 0
return
function Cannon.init 0
push constant 130
pop static 0
push constant 132
pop static 1
call Constants.getEND_Y 0
push constant 2
push constant 16
call Math.multiply 2
sub
pop static 2
push constant 0
pop static 3
push constant 1
pop static 4
push constant 2
pop static 5
push constant 129
neg
push constant 449
neg
push constant 449
neg
push constant 8189
neg
push constant 16383
neg
push constant 16383
neg
push constant 16383
neg
push constant 16383
neg
call Sprites.createSprite 8
pop static 6
push constant 2
call Array.new 1
pop static 7
push constant 0
push static 7
add
push constant 65
neg
push constant 2049
neg
push constant 1345
neg
push constant 73
neg
push constant 3457
neg
push constant 5523
neg
push constant 10233
neg
push constant 20483
call Sprites.createSprite 8
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 1
push static 7
add
push constant 8201
neg
push constant 26558
push constant 777
neg
push constant 16449
neg
push constant 29485
push constant 9093
neg
push constant 4089
neg
push constant 20461
neg
call Sprites.createSprite 8
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 0
return
function Cannon.getSprite 0
push static 6
return
function Cannon.new 0
push constant 4
call Memory.alloc 1
pop pointer 0
call Constants.getSTART_X 0
call Constants.getEND_X 0
call Constants.getSTART_X 0
sub
push constant 2
call Math.divide 2
add
push constant 8
sub
pop this 0
push static 3
pop this 1
push pointer 0
return
function Cannon.dispose 0
push argument 0
pop pointer 0
push pointer 0
call Memory.deAlloc 1
pop temp 0
push constant 0
return
function Cannon.draw 0
push argument 0
pop pointer 0
push this 1
push static 3
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push static 6
push this 0
push static 2
call Sprites.drawSprite 3
pop temp 0
goto IF_END0
label IF_FALSE0
push this 1
push static 5
eq
not
push this 3
push constant 120
gt
and
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push static 3
pop this 1
push this 0
push static 2
call Sprites.clearXY 2
pop temp 0
goto IF_END1
label IF_FALSE1
push this 2
push static 7
add
pop pointer 1
push that 0
push this 0
push static 2
call Sprites.drawSprite 3
pop temp 0
push this 2
push constant 1
add
push constant 2
call Util.mod 2
pop this 2
push this 3
push constant 1
add
pop this 3
label IF_END1
label IF_END0
push constant 0
return
function Cannon.isAlive 0
push argument 0
pop pointer 0
push this 1
push static 3
eq
return
function Cannon.isDead 0
push argument 0
pop pointer 0
push this 1
push static 5
eq
return
function Cannon.setCollision 0
push argument 0
pop pointer 0
push static 4
pop this 1
push constant 0
pop this 3
push constant 0
return
function Cannon.setDead 0
push argument 0
pop pointer 0
push static 5
pop this 1
push constant 0
return
function Cannon.getX 0
push argument 0
pop pointer 0
push this 0
return
function Cannon.handleKeyPress 1
push argument 0
pop pointer 0
push this 1
push static 3
eq
not
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
return
label IF_FALSE0
call Keyboard.keyPressed 0
pop local 0
push local 0
push static 0
eq
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push pointer 0
call Cannon.handleKeyLeft 1
pop temp 0
goto IF_END1
label IF_FALSE1
push local 0
push static 1
eq
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push pointer 0
call Cannon.handleKeyRight 1
pop temp 0
label IF_FALSE2
label IF_END1
push constant 0
return
function Cannon.handleKeyLeft 0
push argument 0
pop pointer 0
push this 0
call Constants.getSTART_X 0
eq
not
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push this 0
push constant 1
sub
pop this 0
push static 6
push this 0
push static 2
call Sprites.drawSprite 3
pop temp 0
push constant 0
call Screen.setColor 1
pop temp 0
push this 0
push constant 16
add
push static 2
push this 0
push constant 17
add
push static 2
push constant 8
add
call Screen.drawLine 4
pop temp 0
label IF_FALSE0
push constant 0
return
function Cannon.handleKeyRight 0
push argument 0
pop pointer 0
push this 0
call Constants.getEND_X 0
push constant 16
sub
eq
not
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push this 0
push constant 1
add
pop this 0
push static 6
push this 0
push static 2
call Sprites.drawSprite 3
pop temp 0
push constant 0
call Screen.setColor 1
pop temp 0
push this 0
push constant 1
sub
push static 2
push this 0
push static 2
push constant 8
add
call Screen.drawLine 4
pop temp 0
label IF_FALSE0
push constant 0
return
function Console.init 0
push static 0
push constant 32
call Output.moveCursor 2
pop temp 0
push constant 0
return
function Console.printString 0
push argument 0
call Output.printString 1
pop temp 0
push argument 0
call String.dispose 1
pop temp 0
push constant 0
return
function Console.printInt 0
push argument 0
call Output.printInt 1
pop temp 0
push constant 0
return
function Console.println 0
push static 0
push constant 1
add
pop static 0
push static 0
push constant 30
gt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
call Screen.setColor 1
pop temp 0
push constant 256
push constant 0
push constant 511
push constant 255
call Screen.drawRectangle 4
pop temp 0
push constant 0
pop static 0
label IF_FALSE0
push static 0
push constant 32
call Output.moveCursor 2
pop temp 0
push constant 0
return
function Constants.init 0
push constant 0
pop static 0
push constant 224
pop static 1
push constant 0
return
function Constants.getSTART_X 0
push static 0
return
function Constants.getEND_X 0
push static 0
push static 1
add
return
function Constants.getSTART_Y 0
push constant 0
return
function Constants.getEND_Y 0
push constant 255
return
function Constants.getWIDTH 0
push static 1
return
function Constants.getPLAYER_Y 0
call Constants.getEND_Y 0
push constant 32
sub
return
function Constants.getEARTH_Y 0
call Constants.getEND_Y 0
push constant 16
sub
return
function Constants.getBOARD_START_Y 0
call Constants.getSTART_Y 0
push constant 11
push constant 4
call Math.multiply 2
add
return
function Constants.getSCORE_X 0
push constant 1
return
function Constants.getSHIELD_Y 0
call Constants.getEND_Y 0
push constant 56
sub
return
function Game.init 0
push constant 0
pop static 0
push constant 9
call Array.new 1
pop static 1
push constant 0
push static 1
add
push constant 128
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 1
push static 1
add
push constant 152
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 2
push static 1
add
push constant 168
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 3
push static 1
add
push constant 170
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 4
push static 1
add
push constant 170
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 5
push static 1
add
push constant 170
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 6
push static 1
add
push constant 178
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 7
push static 1
add
push constant 178
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 8
push static 1
add
push constant 178
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 0
return
function Game.new 0
push constant 3
call Memory.alloc 1
pop pointer 0
push constant 0
pop this 2
push constant 3
pop this 1
push constant 0
pop this 0
push pointer 0
return
function Game.dispose 0
push argument 0
pop pointer 0
push pointer 0
call Memory.deAlloc 1
pop temp 0
push constant 0
return
function Game.run 1
push argument 0
pop pointer 0
push constant 0
pop local 0
label WHILE_EXP0
push local 0
not
not
if-goto WHILE_END0
push pointer 0
call Game.levelRunLoop 1
pop local 0
push this 2
push constant 1
add
pop this 2
goto WHILE_EXP0
label WHILE_END0
push local 0
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 9
call String.new 1
push constant 71
call String.appendChar 2
push constant 97
call String.appendChar 2
push constant 109
call String.appendChar 2
push constant 101
call String.appendChar 2
push constant 32
call String.appendChar 2
push constant 79
call String.appendChar 2
push constant 118
call String.appendChar 2
push constant 101
call String.appendChar 2
push constant 114
call String.appendChar 2
push constant 4
push constant 10
call Util.outputMessage 3
pop temp 0
label IF_FALSE0
call Sys.halt 0
pop temp 0
push constant 0
return
function Game.levelRunLoop 9
push argument 0
pop pointer 0
push this 2
push static 1
add
pop pointer 1
push that 0
call Rack.new 1
pop local 5
call Cannon.new 0
pop local 6
call Missle.new 0
pop local 7
call AlienShots.new 0
pop local 8
push constant 0
pop local 2
push static 0
pop local 0
push constant 55
pop local 4
push constant 0
pop local 2
push constant 0
pop local 1
call Game.drawBoard 0
pop temp 0
call Game.drawShields 0
pop temp 0
push local 6
call Cannon.draw 1
pop temp 0
push this 0
call Game.writeScore 1
pop temp 0
push this 1
call Game.writeLives 1
pop temp 0
push local 5
call Rack.draw 1
pop temp 0
label WHILE_EXP0
push local 2
not
push local 1
not
and
not
if-goto WHILE_END0
push local 6
call Cannon.handleKeyPress 1
pop temp 0
push local 6
call Cannon.isAlive 1
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push local 7
call Missle.handleShot 1
pop temp 0
label IF_FALSE0
push local 7
push local 6
call Cannon.getX 1
call Missle.tick 2
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push local 5
push local 7
call Missle.getX 1
push local 7
call Missle.getY 1
call Rack.handleCollision 3
pop local 3
push local 3
push constant 0
eq
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push local 7
call Missle.setBlowingUp 1
pop temp 0
goto IF_END2
label IF_FALSE2
push this 0
push local 3
add
pop this 0
push local 4
push constant 1
sub
pop local 4
push this 0
call Game.writeScore 1
pop temp 0
label IF_END2
label IF_FALSE1
push local 8
push local 5
call Rack.getRefX 1
push local 5
call Rack.getRefY 1
push local 6
call Cannon.getX 1
push local 6
call Cannon.isAlive 1
call AlienShots.tick 5
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push local 6
call Cannon.setCollision 1
pop temp 0
push local 8
call AlienShots.resetShots 1
pop temp 0
push this 1
push constant 1
sub
pop this 1
push this 1
call Game.writeLives 1
pop temp 0
push this 1
push constant 0
gt
if-goto IF_TRUE4
goto IF_FALSE4
label IF_TRUE4
push this 1
push constant 1
add
call Game.clearLife 1
pop temp 0
label IF_FALSE4
label IF_FALSE3
push this 1
push constant 1
lt
if-goto IF_TRUE5
goto IF_FALSE5
label IF_TRUE5
push constant 0
not
pop local 2
label IF_FALSE5
push local 4
push constant 1
lt
if-goto IF_TRUE6
goto IF_FALSE6
label IF_TRUE6
push constant 0
not
pop local 1
label IF_FALSE6
push local 6
call Cannon.draw 1
pop temp 0
push local 5
call Rack.bump 1
pop temp 0
push local 5
call Rack.getRefY 1
push constant 8
add
call Constants.getPLAYER_Y 0
push constant 1
sub
gt
if-goto IF_TRUE7
goto IF_FALSE7
label IF_TRUE7
push constant 0
not
pop local 2
label IF_FALSE7
push local 0
push constant 1
add
pop local 0
push constant 16
call Sys.wait 1
pop temp 0
goto WHILE_EXP0
label WHILE_END0
push local 5
call Rack.dispose 1
pop temp 0
push local 6
call Cannon.dispose 1
pop temp 0
push local 8
call AlienShots.dispose 1
pop temp 0
push local 7
call Missle.dispose 1
pop temp 0
push local 2
return
function Game.writeLives 0
push constant 22
call Constants.getSCORE_X 0
call Output.moveCursor 2
pop temp 0
push argument 0
call Output.printInt 1
pop temp 0
push constant 0
return
function Game.writeScore 1
push constant 3
call Constants.getSCORE_X 0
call Output.moveCursor 2
pop temp 0
push constant 1000
pop local 0
label WHILE_EXP0
push local 0
push argument 0
push constant 1
add
gt
not
if-goto WHILE_END0
push constant 0
call Output.printInt 1
pop temp 0
push local 0
push constant 10
call Math.divide 2
pop local 0
goto WHILE_EXP0
label WHILE_END0
push argument 0
call Output.printInt 1
pop temp 0
push constant 0
return
function Game.drawShields 5
push constant 4
call Array.new 1
pop local 0
push constant 0
push local 0
add
push constant 511
push constant 255
push constant 127
push constant 63
push constant 31
push constant 31
push constant 31
push constant 31
call Sprites.createSprite 8
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 1
push local 0
add
push constant 128
neg
push constant 256
neg
push constant 512
neg
push constant 1024
neg
push constant 2048
neg
push constant 2048
neg
push constant 2048
neg
push constant 2048
neg
call Sprites.createSprite 8
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 2
push local 0
add
push constant 31
push constant 31
push constant 31
push constant 31
push constant 4065
neg
push constant 2017
neg
push constant 993
neg
push constant 993
neg
call Sprites.createSprite 8
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 3
push local 0
add
push constant 2048
neg
push constant 2048
neg
push constant 2048
neg
push constant 2048
neg
push constant 2041
neg
push constant 2033
neg
push constant 2017
neg
push constant 2017
neg
call Sprites.createSprite 8
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 0
pop local 2
label WHILE_EXP0
push local 2
push constant 3
lt
not
if-goto WHILE_END0
push constant 0
pop local 3
label WHILE_EXP1
push local 3
push constant 2
lt
not
if-goto WHILE_END1
push constant 0
pop local 4
label WHILE_EXP2
push local 4
push constant 2
lt
not
if-goto WHILE_END2
push constant 2
push local 3
call Math.multiply 2
push local 4
add
push local 0
add
pop pointer 1
push that 0
pop local 1
push local 1
call Constants.getSTART_X 0
push constant 32
add
push local 4
push constant 16
call Math.multiply 2
add
push local 2
push constant 64
call Math.multiply 2
add
call Constants.getSHIELD_Y 0
push local 3
push constant 8
call Math.multiply 2
add
call Sprites.drawSprite 3
pop temp 0
push local 4
push constant 1
add
pop local 4
goto WHILE_EXP2
label WHILE_END2
push local 3
push constant 1
add
pop local 3
goto WHILE_EXP1
label WHILE_END1
push local 2
push constant 1
add
pop local 2
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function Game.clearLife 0
push argument 0
push constant 2
lt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
return
label IF_FALSE0
call Cannon.getSprite 0
call Constants.getSTART_X 0
push constant 24
push argument 0
push constant 2
sub
push constant 16
call Math.multiply 2
add
add
call Constants.getEARTH_Y 0
push constant 1
add
call Sprites.eraseSprite 3
pop temp 0
push constant 0
return
function Game.drawBoard 0
push constant 0
call Screen.setColor 1
pop temp 0
push constant 0
push constant 0
push constant 511
push constant 255
call Screen.drawRectangle 4
pop temp 0
push constant 0
call Screen.setColor 1
pop temp 0
call Constants.getSTART_X 0
call Constants.getSTART_Y 0
call Constants.getEND_X 0
call Constants.getEND_Y 0
call Screen.drawRectangle 4
pop temp 0
push constant 0
not
call Screen.setColor 1
pop temp 0
call Constants.getSTART_X 0
call Constants.getEARTH_Y 0
call Constants.getEND_X 0
call Constants.getEARTH_Y 0
call Screen.drawLine 4
pop temp 0
push constant 0
not
call Screen.setColor 1
pop temp 0
call Constants.getEND_X 0
push constant 0
call Constants.getEND_X 0
push constant 255
call Screen.drawLine 4
pop temp 0
push constant 9
call String.new 1
push constant 83
call String.appendChar 2
push constant 67
call String.appendChar 2
push constant 79
call String.appendChar 2
push constant 82
call String.appendChar 2
push constant 69
call String.appendChar 2
push constant 32
call String.appendChar 2
push constant 60
call String.appendChar 2
push constant 49
call String.appendChar 2
push constant 62
call String.appendChar 2
push constant 1
call Constants.getSCORE_X 0
call Util.outputMessage 3
pop temp 0
call Cannon.getSprite 0
call Constants.getSTART_X 0
push constant 24
add
call Constants.getEARTH_Y 0
push constant 1
add
call Sprites.drawSprite 3
pop temp 0
call Cannon.getSprite 0
call Constants.getSTART_X 0
push constant 24
add
push constant 16
add
call Constants.getEARTH_Y 0
push constant 1
add
call Sprites.drawSprite 3
pop temp 0
push constant 32
call Game.drawMenu 1
pop temp 0
push constant 0
return
function Game.moveMenu 1
push constant 0
pop local 0
push constant 0
not
call Screen.setColor 1
pop temp 0
call Constants.getSTART_X 0
push constant 6
push constant 11
call Math.multiply 2
call Constants.getEND_X 0
push constant 19
push constant 11
call Math.multiply 2
call Screen.drawRectangle 4
pop temp 0
push constant 32
call Game.drawMenu 1
pop temp 0
push constant 1000
call Sys.wait 1
pop temp 0
push constant 0
return
function Game.drawMenu 1
push constant 4
push constant 11
call Math.multiply 2
push constant 32
call Math.multiply 2
push argument 0
push constant 8
call Math.multiply 2
push constant 80
add
push constant 16
call Math.divide 2
add
pop local 0
push local 0
call Game.draw00 1
pop temp 0
push local 0
push constant 1
add
call Game.draw01 1
pop temp 0
push local 0
push constant 2
add
call Game.draw02 1
pop temp 0
push local 0
push constant 3
add
call Game.draw03 1
pop temp 0
push constant 6
push constant 11
call Math.multiply 2
push constant 32
call Math.multiply 2
push argument 0
push constant 8
call Math.multiply 2
push constant 66
add
push constant 16
call Math.divide 2
add
pop local 0
push local 0
call Game.draw10 1
pop temp 0
push local 0
push constant 1
add
call Game.draw11 1
pop temp 0
push local 0
push constant 2
add
call Game.draw12 1
pop temp 0
push local 0
push constant 3
add
call Game.draw13 1
pop temp 0
push local 0
push constant 4
add
call Game.draw14 1
pop temp 0
push local 0
push constant 5
add
call Game.draw15 1
pop temp 0
push local 0
push constant 6
add
call Game.draw16 1
pop temp 0
push constant 16
call String.new 1
push constant 32
call String.appendChar 2
push constant 83
call String.appendChar 2
push constant 80
call String.appendChar 2
push constant 65
call String.appendChar 2
push constant 67
call String.appendChar 2
push constant 69
call String.appendChar 2
push constant 32
call String.appendChar 2
push constant 116
call String.appendChar 2
push constant 111
call String.appendChar 2
push constant 32
call String.appendChar 2
push constant 115
call String.appendChar 2
push constant 104
call String.appendChar 2
push constant 111
call String.appendChar 2
push constant 111
call String.appendChar 2
push constant 116
call String.appendChar 2
push constant 32
call String.appendChar 2
push constant 12
push argument 0
push constant 7
add
call Util.outputMessage 3
pop temp 0
push constant 22
call String.new 1
push constant 32
call String.appendChar 2
push constant 76
call String.appendChar 2
push constant 69
call String.appendChar 2
push constant 70
call String.appendChar 2
push constant 84
call String.appendChar 2
push constant 32
call String.appendChar 2
push constant 47
call String.appendChar 2
push constant 32
call String.appendChar 2
push constant 82
call String.appendChar 2
push constant 73
call String.appendChar 2
push constant 71
call String.appendChar 2
push constant 72
call String.appendChar 2
push constant 84
call String.appendChar 2
push constant 32
call String.appendChar 2
push constant 116
call String.appendChar 2
push constant 111
call String.appendChar 2
push constant 32
call String.appendChar 2
push constant 109
call String.appendChar 2
push constant 111
call String.appendChar 2
push constant 118
call String.appendChar 2
push constant 101
call String.appendChar 2
push constant 32
call String.appendChar 2
push constant 14
push argument 0
push constant 4
add
call Util.outputMessage 3
pop temp 0
push constant 22
call String.new 1
push constant 32
call String.appendChar 2
push constant 80
call String.appendChar 2
push constant 114
call String.appendChar 2
push constant 101
call String.appendChar 2
push constant 115
call String.appendChar 2
push constant 115
call String.appendChar 2
push constant 32
call String.appendChar 2
push constant 115
call String.appendChar 2
push constant 112
call String.appendChar 2
push constant 97
call String.appendChar 2
push constant 99
call String.appendChar 2
push constant 101
call String.appendChar 2
push constant 32
call String.appendChar 2
push constant 116
call String.appendChar 2
push constant 111
call String.appendChar 2
push constant 32
call String.appendChar 2
push constant 115
call String.appendChar 2
push constant 116
call String.appendChar 2
push constant 97
call String.appendChar 2
push constant 114
call String.appendChar 2
push constant 116
call String.appendChar 2
push constant 32
call String.appendChar 2
push constant 18
push argument 0
push constant 4
add
call Util.outputMessage 3
pop temp 0
push constant 0
return
function Game.draw00 1
push constant 16384
push argument 0
add
pop local 0
push local 0
push constant 0
add
push constant 3072
not
call Memory.poke 2
pop temp 0
push local 0
push constant 32
add
push constant 3072
not
call Memory.poke 2
pop temp 0
push local 0
push constant 64
add
push constant 1
neg
not
call Memory.poke 2
pop temp 0
push local 0
push constant 96
add
push constant 1
neg
not
call Memory.poke 2
pop temp 0
push local 0
push constant 128
add
push constant 12292
neg
not
call Memory.poke 2
pop temp 0
push local 0
push constant 160
add
push constant 12292
neg
not
call Memory.poke 2
pop temp 0
push local 0
push constant 192
add
push constant 3072
not
call Memory.poke 2
pop temp 0
push local 0
push constant 224
add
push constant 3072
not
call Memory.poke 2
pop temp 0
push local 0
push constant 256
add
push constant 3327
not
call Memory.poke 2
pop temp 0
push local 0
push constant 288
add
push constant 3327
not
call Memory.poke 2
pop temp 0
push local 0
push constant 320
add
push constant 13312
neg
not
call Memory.poke 2
pop temp 0
push local 0
push constant 352
add
push constant 13312
neg
not
call Memory.poke 2
pop temp 0
push local 0
push constant 384
add
push constant 13312
neg
not
call Memory.poke 2
pop temp 0
push local 0
push constant 416
add
push constant 13312
neg
not
call Memory.poke 2
pop temp 0
push local 0
push constant 448
add
push constant 1
neg
not
call Memory.poke 2
pop temp 0
push local 0
push constant 480
add
push constant 1
neg
not
call Memory.poke 2
pop temp 0
push constant 0
return
function Game.draw01 1
push constant 16384
push argument 0
add
pop local 0
push local 0
push constant 0
add
push constant 192
not
call Memory.poke 2
pop temp 0
push local 0
push constant 32
add
push constant 192
not
call Memory.poke 2
pop temp 0
push local 0
push constant 64
add
push constant 49
neg
not
call Memory.poke 2
pop temp 0
push local 0
push constant 96
add
push constant 49
neg
not
call Memory.poke 2
pop temp 0
push local 0
push constant 128
add
push constant 817
neg
not
call Memory.poke 2
pop temp 0
push local 0
push constant 160
add
push constant 817
neg
not
call Memory.poke 2
pop temp 0
push local 0
push constant 192
add
push constant 192
not
call Memory.poke 2
pop temp 0
push local 0
push constant 224
add
push constant 192
not
call Memory.poke 2
pop temp 0
push local 0
push constant 256
add
push constant 192
not
call Memory.poke 2
pop temp 0
push local 0
push constant 288
add
push constant 192
not
call Memory.poke 2
pop temp 0
push local 0
push constant 320
add
push constant 769
neg
not
call Memory.poke 2
pop temp 0
push local 0
push constant 352
add
push constant 769
neg
not
call Memory.poke 2
pop temp 0
push local 0
push constant 384
add
push constant 769
neg
not
call Memory.poke 2
pop temp 0
push local 0
push constant 416
add
push constant 769
neg
not
call Memory.poke 2
pop temp 0
push local 0
push constant 448
add
push constant 1
neg
not
call Memory.poke 2
pop temp 0
push local 0
push constant 480
add
push constant 1
neg
not
call Memory.poke 2
pop temp 0
push constant 0
return
function Game.draw02 1
push constant 16384
push argument 0
add
pop local 0
push local 0
push constant 0
add
push constant 16372
neg
not
call Memory.poke 2
pop temp 0
push local 0
push constant 32
add
push constant 16372
neg
not
call Memory.poke 2
pop temp 0
push local 0
push constant 64
add
push constant 4
neg
not
call Memory.poke 2
pop temp 0
push local 0
push constant 96
add
push constant 4
neg
not
call Memory.poke 2
pop temp 0
push local 0
push constant 128
add
push constant 52
neg
not
call Memory.poke 2
pop temp 0
push local 0
push constant 160
add
push constant 52
neg
not
call Memory.poke 2
pop temp 0
push local 0
push constant 192
add
push constant 52
neg
not
call Memory.poke 2
pop temp 0
push local 0
push constant 224
add
push constant 52
neg
not
call Memory.poke 2
pop temp 0
push local 0
push constant 256
add
push constant 52
neg
not
call Memory.poke 2
pop temp 0
push local 0
push constant 288
add
push constant 52
neg
not
call Memory.poke 2
pop temp 0
push local 0
push constant 320
add
push constant 16372
neg
not
call Memory.poke 2
pop temp 0
push local 0
push constant 352
add
push constant 16372
neg
not
call Memory.poke 2
pop temp 0
push local 0
push constant 384
add
push constant 16372
neg
not
call Memory.poke 2
pop temp 0
push local 0
push constant 416
add
push constant 16372
neg
not
call Memory.poke 2
pop temp 0
push local 0
push constant 448
add
push constant 1
neg
not
call Memory.poke 2
pop temp 0
push local 0
push constant 480
add
push constant 1
neg
not
call Memory.poke 2
pop temp 0
push constant 0
return
function Game.draw03 1
push constant 16384
push argument 0
add
pop local 0
push local 0
push constant 0
add
push constant 1024
neg
not
call Memory.poke 2
pop temp 0
push local 0
push constant 32
add
push constant 1024
neg
not
call Memory.poke 2
pop temp 0
push local 0
push constant 64
add
push constant 1
neg
not
call Memory.poke 2
pop temp 0
push local 0
push constant 96
add
push constant 1
neg
not
call Memory.poke 2
pop temp 0
push local 0
push constant 128
add
push constant 4
neg
not
call Memory.poke 2
pop temp 0
push local 0
push constant 160
add
push constant 4
neg
not
call Memory.poke 2
pop temp 0
push local 0
push constant 192
add
push constant 16
neg
not
call Memory.poke 2
pop temp 0
push local 0
push constant 224
add
push constant 16
neg
not
call Memory.poke 2
pop temp 0
push local 0
push constant 256
add
push constant 4
neg
not
call Memory.poke 2
pop temp 0
push local 0
push constant 288
add
push constant 4
neg
not
call Memory.poke 2
pop temp 0
push local 0
push constant 320
add
push constant 1024
neg
not
call Memory.poke 2
pop temp 0
push local 0
push constant 352
add
push constant 1024
neg
not
call Memory.poke 2
pop temp 0
push local 0
push constant 384
add
push constant 1024
neg
not
call Memory.poke 2
pop temp 0
push local 0
push constant 416
add
push constant 1024
neg
not
call Memory.poke 2
pop temp 0
push local 0
push constant 448
add
push constant 1
neg
not
call Memory.poke 2
pop temp 0
push local 0
push constant 480
add
push constant 1
neg
not
call Memory.poke 2
pop temp 0
push constant 0
return
function Game.draw10 1
push constant 16384
push argument 0
add
pop local 0
push local 0
push constant 0
add
push constant 51
not
call Memory.poke 2
pop temp 0
push local 0
push constant 32
add
push constant 51
not
call Memory.poke 2
pop temp 0
push local 0
push constant 64
add
push constant 16179
not
call Memory.poke 2
pop temp 0
push local 0
push constant 96
add
push constant 16179
not
call Memory.poke 2
pop temp 0
push local 0
push constant 128
add
push constant 16179
not
call Memory.poke 2
pop temp 0
push local 0
push constant 160
add
push constant 16179
not
call Memory.poke 2
pop temp 0
push local 0
push constant 192
add
push constant 15408
not
call Memory.poke 2
pop temp 0
push local 0
push constant 224
add
push constant 15408
not
call Memory.poke 2
pop temp 0
push local 0
push constant 256
add
push constant 15408
not
call Memory.poke 2
pop temp 0
push local 0
push constant 288
add
push constant 15408
not
call Memory.poke 2
pop temp 0
push local 0
push constant 320
add
push constant 15408
not
call Memory.poke 2
pop temp 0
push local 0
push constant 352
add
push constant 15408
not
call Memory.poke 2
pop temp 0
push local 0
push constant 384
add
push constant 15408
not
call Memory.poke 2
pop temp 0
push local 0
push constant 416
add
push constant 15408
not
call Memory.poke 2
pop temp 0
push local 0
push constant 448
add
push constant 1
neg
not
call Memory.poke 2
pop temp 0
push local 0
push constant 480
add
push constant 1
neg
not
call Memory.poke 2
pop temp 0
push constant 0
return
function Game.draw11 1
push constant 16384
push argument 0
add
pop local 0
push local 0
push constant 0
add
push constant 16323
not
call Memory.poke 2
pop temp 0
push local 0
push constant 32
add
push constant 16323
not
call Memory.poke 2
pop temp 0
push local 0
push constant 64
add
push constant 16323
not
call Memory.poke 2
pop temp 0
push local 0
push constant 96
add
push constant 16323
not
call Memory.poke 2
pop temp 0
push local 0
push constant 128
add
push constant 4035
not
call Memory.poke 2
pop temp 0
push local 0
push constant 160
add
push constant 4035
not
call Memory.poke 2
pop temp 0
push local 0
push constant 192
add
push constant 12337
neg
not
call Memory.poke 2
pop temp 0
push local 0
push constant 224
add
push constant 12337
neg
not
call Memory.poke 2
pop temp 0
push local 0
push constant 256
add
push constant 15601
neg
not
call Memory.poke 2
pop temp 0
push local 0
push constant 288
add
push constant 15601
neg
not
call Memory.poke 2
pop temp 0
push local 0
push constant 320
add
push constant 3265
neg
not
call Memory.poke 2
pop temp 0
push local 0
push constant 352
add
push constant 3265
neg
not
call Memory.poke 2
pop temp 0
push local 0
push constant 384
add
push constant 4033
neg
not
call Memory.poke 2
pop temp 0
push local 0
push constant 416
add
push constant 4033
neg
not
call Memory.poke 2
pop temp 0
push local 0
push constant 448
add
push constant 1
neg
not
call Memory.poke 2
pop temp 0
push local 0
push constant 480
add
push constant 1
neg
not
call Memory.poke 2
pop temp 0
push constant 0
return
function Game.draw12 1
push constant 16384
push argument 0
add
pop local 0
push local 0
push constant 0
add
push constant 8177
neg
not
call Memory.poke 2
pop temp 0
push local 0
push constant 32
add
push constant 8177
neg
not
call Memory.poke 2
pop temp 0
push local 0
push constant 64
add
push constant 6193
neg
not
call Memory.poke 2
pop temp 0
push local 0
push constant 96
add
push constant 6193
neg
not
call Memory.poke 2
pop temp 0
push local 0
push constant 128
add
push constant 32765
neg
not
call Memory.poke 2
pop temp 0
push local 0
push constant 160
add
push constant 32765
neg
not
call Memory.poke 2
pop temp 0
push local 0
push constant 192
add
push constant 24637
neg
not
call Memory.poke 2
pop temp 0
push local 0
push constant 224
add
push constant 24637
neg
not
call Memory.poke 2
pop temp 0
push local 0
push constant 256
add
push constant 24637
neg
not
call Memory.poke 2
pop temp 0
push local 0
push constant 288
add
push constant 24637
neg
not
call Memory.poke 2
pop temp 0
push local 0
push constant 320
add
push constant 24637
neg
not
call Memory.poke 2
pop temp 0
push local 0
push constant 352
add
push constant 24637
neg
not
call Memory.poke 2
pop temp 0
push local 0
push constant 384
add
push constant 24637
neg
not
call Memory.poke 2
pop temp 0
push local 0
push constant 416
add
push constant 24637
neg
not
call Memory.poke 2
pop temp 0
push local 0
push constant 448
add
push constant 1
neg
not
call Memory.poke 2
pop temp 0
push local 0
push constant 480
add
push constant 1
neg
not
call Memory.poke 2
pop temp 0
push constant 0
return
function Game.draw13 1
push constant 16384
push argument 0
add
pop local 0
push local 0
push constant 0
add
push constant 15361
not
call Memory.poke 2
pop temp 0
push local 0
push constant 32
add
push constant 15361
not
call Memory.poke 2
pop temp 0
push local 0
push constant 64
add
push constant 13305
not
call Memory.poke 2
pop temp 0
push local 0
push constant 96
add
push constant 13305
not
call Memory.poke 2
pop temp 0
push local 0
push constant 128
add
push constant 13281
not
call Memory.poke 2
pop temp 0
push local 0
push constant 160
add
push constant 13281
not
call Memory.poke 2
pop temp 0
push local 0
push constant 192
add
push constant 13281
not
call Memory.poke 2
pop temp 0
push local 0
push constant 224
add
push constant 13281
not
call Memory.poke 2
pop temp 0
push local 0
push constant 256
add
push constant 13281
not
call Memory.poke 2
pop temp 0
push local 0
push constant 288
add
push constant 13281
not
call Memory.poke 2
pop temp 0
push local 0
push constant 320
add
push constant 13281
not
call Memory.poke 2
pop temp 0
push local 0
push constant 352
add
push constant 13281
not
call Memory.poke 2
pop temp 0
push local 0
push constant 384
add
push constant 15361
not
call Memory.poke 2
pop temp 0
push local 0
push constant 416
add
push constant 15361
not
call Memory.poke 2
pop temp 0
push local 0
push constant 448
add
push constant 1
neg
not
call Memory.poke 2
pop temp 0
push local 0
push constant 480
add
push constant 1
neg
not
call Memory.poke 2
pop temp 0
push constant 0
return
function Game.draw14 1
push constant 16384
push argument 0
add
pop local 0
push local 0
push constant 0
add
push constant 768
not
call Memory.poke 2
pop temp 0
push local 0
push constant 32
add
push constant 768
not
call Memory.poke 2
pop temp 0
push local 0
push constant 64
add
push constant 3073
neg
not
call Memory.poke 2
pop temp 0
push local 0
push constant 96
add
push constant 3073
neg
not
call Memory.poke 2
pop temp 0
push local 0
push constant 128
add
push constant 960
not
call Memory.poke 2
pop temp 0
push local 0
push constant 160
add
push constant 960
not
call Memory.poke 2
pop temp 0
push local 0
push constant 192
add
push constant 13308
not
call Memory.poke 2
pop temp 0
push local 0
push constant 224
add
push constant 13308
not
call Memory.poke 2
pop temp 0
push local 0
push constant 256
add
push constant 13308
not
call Memory.poke 2
pop temp 0
push local 0
push constant 288
add
push constant 13308
not
call Memory.poke 2
pop temp 0
push local 0
push constant 320
add
push constant 3076
neg
not
call Memory.poke 2
pop temp 0
push local 0
push constant 352
add
push constant 3076
neg
not
call Memory.poke 2
pop temp 0
push local 0
push constant 384
add
push constant 3328
neg
not
call Memory.poke 2
pop temp 0
push local 0
push constant 416
add
push constant 3328
neg
not
call Memory.poke 2
pop temp 0
push local 0
push constant 448
add
push constant 1
neg
not
call Memory.poke 2
pop temp 0
push local 0
push constant 480
add
push constant 1
neg
not
call Memory.poke 2
pop temp 0
push constant 0
return
function Game.draw15 1
push constant 16384
push argument 0
add
pop local 0
push local 0
push constant 0
add
push constant 384
not
call Memory.poke 2
pop temp 0
push local 0
push constant 32
add
push constant 384
not
call Memory.poke 2
pop temp 0
push local 0
push constant 64
add
push constant 1633
neg
not
call Memory.poke 2
pop temp 0
push local 0
push constant 96
add
push constant 1633
neg
not
call Memory.poke 2
pop temp 0
push local 0
push constant 128
add
push constant 384
not
call Memory.poke 2
pop temp 0
push local 0
push constant 160
add
push constant 384
not
call Memory.poke 2
pop temp 0
push local 0
push constant 192
add
push constant 1
neg
not
call Memory.poke 2
pop temp 0
push local 0
push constant 224
add
push constant 1
neg
not
call Memory.poke 2
pop temp 0
push local 0
push constant 256
add
push constant 128
neg
not
call Memory.poke 2
pop temp 0
push local 0
push constant 288
add
push constant 128
neg
not
call Memory.poke 2
pop temp 0
push local 0
push constant 320
add
push constant 121
neg
not
call Memory.poke 2
pop temp 0
push local 0
push constant 352
add
push constant 121
neg
not
call Memory.poke 2
pop temp 0
push local 0
push constant 384
add
push constant 391
not
call Memory.poke 2
pop temp 0
push local 0
push constant 416
add
push constant 391
not
call Memory.poke 2
pop temp 0
push local 0
push constant 448
add
push constant 1
neg
not
call Memory.poke 2
pop temp 0
push local 0
push constant 480
add
push constant 1
neg
not
call Memory.poke 2
pop temp 0
push constant 0
return
function Game.draw16 1
push constant 16384
push argument 0
add
pop local 0
push local 0
push constant 0
add
push constant 128
neg
not
call Memory.poke 2
pop temp 0
push local 0
push constant 32
add
push constant 128
neg
not
call Memory.poke 2
pop temp 0
push local 0
push constant 64
add
push constant 1
neg
not
call Memory.poke 2
pop temp 0
push local 0
push constant 96
add
push constant 1
neg
not
call Memory.poke 2
pop temp 0
push local 0
push constant 128
add
push constant 128
neg
not
call Memory.poke 2
pop temp 0
push local 0
push constant 160
add
push constant 128
neg
not
call Memory.poke 2
pop temp 0
push local 0
push constant 192
add
push constant 121
neg
not
call Memory.poke 2
pop temp 0
push local 0
push constant 224
add
push constant 121
neg
not
call Memory.poke 2
pop temp 0
push local 0
push constant 256
add
push constant 121
neg
not
call Memory.poke 2
pop temp 0
push local 0
push constant 288
add
push constant 121
neg
not
call Memory.poke 2
pop temp 0
push local 0
push constant 320
add
push constant 121
neg
not
call Memory.poke 2
pop temp 0
push local 0
push constant 352
add
push constant 121
neg
not
call Memory.poke 2
pop temp 0
push local 0
push constant 384
add
push constant 128
neg
not
call Memory.poke 2
pop temp 0
push local 0
push constant 416
add
push constant 128
neg
not
call Memory.poke 2
pop temp 0
push local 0
push constant 448
add
push constant 1
neg
not
call Memory.poke 2
pop temp 0
push local 0
push constant 480
add
push constant 1
neg
not
call Memory.poke 2
pop temp 0
push constant 0
return
function Main.init 0
push constant 32
pop static 0
call Console.init 0
pop temp 0
call Constants.init 0
pop temp 0
call Game.init 0
pop temp 0
call Sprites.init 0
pop temp 0
call Rack.init 0
pop temp 0
call Cannon.init 0
pop temp 0
call Missle.init 0
pop temp 0
call AlienShot.init 0
pop temp 0
call AlienShots.init 0
pop temp 0
call Alien.init 0
pop temp 0
push constant 0
not
call Screen.setColor 1
pop temp 0
push constant 0
return
function Main.main 2
call Main.init 0
pop temp 0
call Game.drawBoard 0
pop temp 0
label WHILE_EXP0
push constant 0
not
not
if-goto WHILE_END0
call Keyboard.keyPressed 0
pop local 1
push local 1
push static 0
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
label WHILE_EXP1
push local 1
push constant 0
eq
not
not
if-goto WHILE_END1
call Keyboard.keyPressed 0
pop local 1
goto WHILE_EXP1
label WHILE_END1
call Game.new 0
pop local 0
push local 0
call Game.run 1
pop temp 0
push local 0
call Game.dispose 1
pop temp 0
label IF_FALSE0
push constant 100
call Sys.wait 1
pop temp 0
goto WHILE_EXP0
label WHILE_END0
call Sys.halt 0
pop temp 0
push constant 0
return
function Main.debugMain 6
call Main.init 0
pop temp 0
push constant 129
neg
push constant 65
neg
push constant 129
neg
push constant 257
neg
push constant 129
neg
push constant 65
neg
push constant 129
neg
push constant 1
neg
call Sprites.createSprite 8
pop local 4
push constant 2321
neg
push constant 1089
neg
push constant 2017
neg
push constant 4081
neg
push constant 4081
neg
push constant 2017
neg
push constant 577
neg
push constant 2193
neg
call Sprites.createSprite 8
pop local 4
push constant 32
pop local 1
push constant 32
pop local 2
push constant 0
not
call Screen.setColor 1
pop temp 0
push local 1
push local 2
push local 1
push constant 16
add
push local 2
push constant 8
add
call Screen.drawRectangle 4
pop temp 0
push local 1
push constant 4
add
pop local 1
push local 2
push constant 4
sub
pop local 2
push local 4
push local 1
push local 2
call Sprites.drawSpriteXOR 3
pop temp 0
push local 4
push local 1
push local 2
call Sprites.eraseSprite 3
pop temp 0
push constant 0
return
function Missle.init 0
push constant 32
pop static 0
push constant 0
pop static 4
push constant 1
pop static 5
push constant 2
pop static 6
push constant 3
pop static 7
push constant 4
pop static 8
push constant 4
pop static 3
push constant 129
neg
push constant 129
neg
push constant 129
neg
push constant 1
neg
push constant 1
neg
push constant 1
neg
push constant 1
neg
push constant 1
neg
call Sprites.createSprite 8
pop static 1
push constant 2321
neg
push constant 1089
neg
push constant 2017
neg
push constant 4081
neg
push constant 4081
neg
push constant 2017
neg
push constant 577
neg
push constant 2193
neg
call Sprites.createSprite 8
pop static 2
push constant 0
return
function Missle.new 0
push constant 4
call Memory.alloc 1
pop pointer 0
push constant 0
pop this 2
push constant 0
pop this 3
push static 4
pop this 0
push constant 0
pop this 1
push pointer 0
return
function Missle.dispose 0
push argument 0
pop pointer 0
push pointer 0
call Memory.deAlloc 1
pop temp 0
push constant 0
return
function Missle.getX 0
push argument 0
pop pointer 0
push this 2
push constant 8
add
return
function Missle.getY 0
push argument 0
pop pointer 0
push this 3
return
function Missle.isActive 0
push argument 0
pop pointer 0
push this 0
push static 6
eq
return
function Missle.handleShot 1
push argument 0
pop pointer 0
call Keyboard.keyPressed 0
pop local 0
push this 1
push local 0
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
return
label IF_FALSE0
push this 0
push static 4
eq
push local 0
push static 0
eq
and
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push static 5
pop this 0
label IF_FALSE1
push local 0
pop this 1
push this 0
push static 5
eq
return
function Missle.setBlowingUp 0
push argument 0
pop pointer 0
push static 7
pop this 0
push constant 0
return
function Missle.tick 2
push argument 0
pop pointer 0
push constant 0
pop local 0
push this 0
push static 5
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push argument 1
pop this 2
call Constants.getPLAYER_Y 0
pop this 3
push static 6
pop this 0
push static 1
push this 2
push this 3
call Sprites.drawSpriteXOR 3
pop temp 0
push constant 0
return
label IF_FALSE0
push this 0
push static 6
eq
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push static 1
push this 2
push this 3
call Sprites.eraseSprite 3
pop temp 0
push this 3
push static 3
sub
pop this 3
push this 3
call Constants.getBOARD_START_Y 0
lt
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push static 7
pop this 0
call Constants.getBOARD_START_Y 0
pop this 3
push constant 0
return
label IF_FALSE2
push static 1
push this 2
push this 3
call Sprites.drawSpriteXOR 3
pop local 0
push local 0
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push static 1
push this 2
push this 3
call Sprites.eraseSprite 3
pop temp 0
push static 4
pop this 0
push constant 0
not
return
label IF_FALSE3
push constant 0
return
label IF_FALSE1
push this 0
push static 7
eq
if-goto IF_TRUE4
goto IF_FALSE4
label IF_TRUE4
push static 2
push this 2
push this 3
call Sprites.drawSpriteXOR 3
pop temp 0
push static 8
pop this 0
push constant 0
return
label IF_FALSE4
push this 0
push static 8
eq
if-goto IF_TRUE5
goto IF_FALSE5
label IF_TRUE5
push static 2
push this 2
push this 3
call Sprites.eraseSprite 3
pop temp 0
push static 4
pop this 0
push constant 0
return
label IF_FALSE5
push local 0
return
function Rack.init 0
push constant 16
pop static 0
push constant 55
pop static 1
push constant 11
pop static 2
push constant 0
return
function Rack.new 3
push constant 9
call Memory.alloc 1
pop pointer 0
call Constants.getSTART_X 0
push constant 32
add
pop this 1
push argument 0
pop this 2
push constant 0
not
pop this 4
push static 1
call Array.new 1
pop this 0
push constant 0
pop this 5
push constant 2
pop this 3
push constant 6000
pop local 0
push constant 0
pop local 1
label WHILE_EXP0
push local 1
push static 1
lt
not
if-goto WHILE_END0
push local 1
push static 2
call Math.divide 2
pop local 2
push local 2
push constant 2
lt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push local 1
push this 0
add
call Alien.getOCTOPUS 0
call Alien.new 1
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 1
push local 0
add
call Alien.getOCTOPUS 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
goto IF_END0
label IF_FALSE0
push local 2
push constant 4
lt
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push local 1
push this 0
add
call Alien.getCRAB 0
call Alien.new 1
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 1
push local 0
add
call Alien.getCRAB 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
goto IF_END1
label IF_FALSE1
push local 1
push this 0
add
call Alien.getSQUID 0
call Alien.new 1
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 1
push local 0
add
call Alien.getSQUID 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
label IF_END1
label IF_END0
push local 1
push constant 1
add
pop local 1
goto WHILE_EXP0
label WHILE_END0
push pointer 0
return
function Rack.dispose 2
push argument 0
pop pointer 0
push constant 0
pop local 1
label WHILE_EXP0
push local 1
push static 1
lt
not
if-goto WHILE_END0
push local 1
push this 0
add
pop pointer 1
push that 0
pop local 0
push local 0
call Alien.dispose 1
pop temp 0
push local 1
push constant 1
add
pop local 1
goto WHILE_EXP0
label WHILE_END0
push pointer 0
call Memory.deAlloc 1
pop temp 0
push constant 0
return
function Rack.draw 5
push argument 0
pop pointer 0
push constant 0
pop local 1
label WHILE_EXP0
push local 1
push static 1
lt
not
if-goto WHILE_END0
push local 1
push static 2
call Math.divide 2
pop local 2
push local 1
push static 2
call Util.mod 2
pop local 3
push local 1
push this 0
add
pop pointer 1
push that 0
pop local 4
push local 4
push this 1
push local 3
push static 0
call Math.multiply 2
add
push this 2
push local 2
push static 0
call Math.multiply 2
sub
push this 4
call Alien.drawXY 4
pop temp 0
push local 1
push constant 1
add
pop local 1
goto WHILE_EXP0
label WHILE_END0
push this 4
not
pop this 4
push constant 0
return
function Rack.getMaxX 3
push argument 0
pop pointer 0
push constant 10
pop local 1
label WHILE_EXP0
push local 1
push constant 1
neg
gt
not
if-goto WHILE_END0
push constant 4
pop local 0
label WHILE_EXP1
push local 0
push constant 1
neg
gt
not
if-goto WHILE_END1
push local 0
push static 2
call Math.multiply 2
push local 1
add
push this 0
add
pop pointer 1
push that 0
pop local 2
push local 2
call Alien.getIsAlive 1
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push this 1
push local 1
push static 0
call Math.multiply 2
add
push constant 16
add
return
label IF_FALSE0
push local 0
push constant 1
sub
pop local 0
goto WHILE_EXP1
label WHILE_END1
push local 1
push constant 1
sub
pop local 1
goto WHILE_EXP0
label WHILE_END0
push constant 1
neg
return
function Rack.getMinX 3
push argument 0
pop pointer 0
push constant 0
pop local 1
label WHILE_EXP0
push local 1
push static 2
lt
not
if-goto WHILE_END0
push constant 0
pop local 0
label WHILE_EXP1
push local 0
push constant 5
lt
not
if-goto WHILE_END1
push local 0
push static 2
call Math.multiply 2
push local 1
add
push this 0
add
pop pointer 1
push that 0
pop local 2
push local 2
call Alien.getIsAlive 1
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push this 1
push local 1
push static 0
call Math.multiply 2
add
return
label IF_FALSE0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP1
label WHILE_END1
push local 1
push constant 1
add
pop local 1
goto WHILE_EXP0
label WHILE_END0
push constant 1
neg
return
function Rack.getRefY 5
push argument 0
pop pointer 0
push constant 0
pop local 4
push constant 0
pop local 0
label WHILE_EXP0
push local 4
not
push local 0
push constant 5
lt
and
not
if-goto WHILE_END0
push constant 0
pop local 1
label WHILE_EXP1
push local 4
not
push local 1
push static 2
lt
and
not
if-goto WHILE_END1
push local 0
push static 2
call Math.multiply 2
push local 1
add
push this 0
add
pop pointer 1
push that 0
pop local 3
push local 3
call Alien.getIsAlive 1
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push this 2
push local 0
push static 0
call Math.multiply 2
sub
pop local 2
push constant 0
not
pop local 4
label IF_FALSE0
push local 1
push constant 1
add
pop local 1
goto WHILE_EXP1
label WHILE_END1
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push local 2
return
function Rack.getRefX 0
push argument 0
pop pointer 0
push this 1
return
function Rack.bump 4
push argument 0
pop pointer 0
push this 7
push constant 1
neg
gt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push this 6
push constant 6
gt
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push this 7
push this 8
call Sprites.clearXY 2
pop temp 0
push constant 1
neg
pop this 7
push constant 1
neg
pop this 8
label IF_FALSE1
push this 6
push constant 1
add
pop this 6
label IF_FALSE0
push this 5
push constant 0
eq
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push this 1
push this 3
add
pop this 1
push this 4
not
pop this 4
push pointer 0
call Rack.getMaxX 1
call Constants.getEND_X 0
push constant 8
sub
push constant 1
sub
gt
push pointer 0
call Rack.getMinX 1
call Constants.getSTART_X 0
push constant 9
add
lt
or
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push this 3
push constant 1
neg
call Math.multiply 2
pop this 3
push this 2
push constant 8
add
pop this 2
push this 1
push this 3
add
pop this 1
label IF_FALSE3
label IF_FALSE2
push constant 0
pop local 2
label WHILE_EXP0
push local 2
not
push this 5
push constant 55
lt
and
not
if-goto WHILE_END0
push this 5
push this 0
add
pop pointer 1
push that 0
pop local 3
push local 3
call Alien.getIsAlive 1
if-goto IF_TRUE4
goto IF_FALSE4
label IF_TRUE4
push constant 0
not
pop local 2
goto IF_END4
label IF_FALSE4
push this 5
push constant 1
add
pop this 5
label IF_END4
goto WHILE_EXP0
label WHILE_END0
push local 2
if-goto IF_TRUE5
goto IF_FALSE5
label IF_TRUE5
push this 5
push static 2
call Math.divide 2
pop local 0
push this 5
push static 2
call Util.mod 2
pop local 1
push constant 0
call Screen.setColor 1
pop temp 0
push this 1
push local 1
push static 0
call Math.multiply 2
add
push this 2
push local 0
push static 0
call Math.multiply 2
sub
push constant 8
sub
push this 1
push local 1
push static 0
call Math.multiply 2
add
push constant 16
add
push this 2
push local 0
push static 0
call Math.multiply 2
sub
call Screen.drawRectangle 4
pop temp 0
push local 3
push this 1
push local 1
push static 0
call Math.multiply 2
add
push this 2
push local 0
push static 0
call Math.multiply 2
sub
push this 4
call Alien.drawXY 4
pop temp 0
push this 5
push constant 1
add
pop this 5
label IF_FALSE5
push this 5
push constant 55
call Util.mod 2
pop this 5
push constant 0
return
function Rack.handleCollision 5
push argument 0
pop pointer 0
push argument 1
push this 1
lt
push argument 1
push this 1
push static 2
push static 0
call Math.multiply 2
add
gt
or
push argument 2
push this 2
push constant 8
add
gt
or
push argument 2
push this 2
push constant 4
push static 0
call Math.multiply 2
sub
lt
or
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
return
label IF_FALSE0
push constant 0
pop local 0
label WHILE_EXP0
push local 0
push constant 5
lt
not
if-goto WHILE_END0
push this 2
push local 0
push static 0
call Math.multiply 2
sub
pop local 3
push argument 2
push local 3
push constant 9
add
lt
push argument 2
push local 3
push constant 1
sub
gt
and
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push constant 0
pop local 1
label WHILE_EXP1
push local 1
push static 2
lt
not
if-goto WHILE_END1
push this 1
push local 1
push static 0
call Math.multiply 2
add
pop local 2
push argument 1
push local 2
push constant 1
sub
gt
push argument 1
push local 2
push constant 17
add
lt
and
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push local 0
push static 2
call Math.multiply 2
push local 1
add
push this 0
add
pop pointer 1
push that 0
pop local 4
push local 4
call Alien.getIsAlive 1
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push this 1
push local 1
push static 0
call Math.multiply 2
add
pop this 7
push this 2
push local 0
push static 0
call Math.multiply 2
sub
pop this 8
push constant 0
pop this 6
push local 4
push this 7
push this 8
call Alien.drawExplosionXY 3
pop temp 0
push local 4
push constant 0
call Alien.setAlive 2
pop temp 0
push local 4
call Alien.getHitPoints 1
return
goto IF_END3
label IF_FALSE3
push constant 0
return
label IF_END3
label IF_FALSE2
push local 1
push constant 1
add
pop local 1
goto WHILE_EXP1
label WHILE_END1
label IF_FALSE1
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function Sprites.init 1
push constant 17
call Array.new 1
pop static 0
push constant 17
call Array.new 1
pop static 1
push constant 0
push static 1
add
push constant 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 1
push static 1
add
push constant 1
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 0
push static 0
add
push constant 1
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 1
push static 0
add
push constant 2
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 2
pop local 0
label WHILE_EXP0
push local 0
push constant 16
lt
not
if-goto WHILE_END0
push local 0
push static 0
add
push local 0
push constant 1
sub
push static 0
add
pop pointer 1
push that 0
push constant 2
call Math.multiply 2
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 0
push static 1
add
push local 0
push static 0
add
pop pointer 1
push that 0
push constant 1
sub
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push constant 0
not
push constant 0
not
push constant 0
not
push constant 0
not
push constant 0
not
push constant 0
not
push constant 0
not
push constant 0
not
call Sprites.createSprite 8
pop static 2
push constant 0
return
function Sprites.createSprite 1
push constant 16
call Array.new 1
pop local 0
push constant 0
push local 0
add
push argument 0
not
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 1
push local 0
add
push argument 1
not
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 2
push local 0
add
push argument 2
not
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 3
push local 0
add
push argument 3
not
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 4
push local 0
add
push argument 4
not
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 5
push local 0
add
push argument 5
not
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 6
push local 0
add
push argument 6
not
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 7
push local 0
add
push argument 7
not
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 0
return
function Sprites.xor 0
push argument 0
push argument 1
not
and
push argument 0
not
push argument 1
and
or
return
function Sprites.drawSpriteXOR 11
push argument 1
push constant 511
gt
push argument 2
or
push constant 255
gt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
label IF_FALSE0
push constant 0
pop local 8
push constant 16384
push constant 32
push argument 2
call Math.multiply 2
add
push argument 1
push constant 16
call Math.divide 2
add
pop local 0
push argument 1
push constant 16
call Util.mod 2
pop local 6
push constant 16
push local 6
sub
pop local 7
push local 6
push static 1
add
pop pointer 1
push that 0
pop local 5
push local 5
not
pop local 4
push constant 0
pop local 3
label WHILE_EXP0
push local 3
push constant 8
lt
not
if-goto WHILE_END0
push local 0
push local 3
push constant 32
call Math.multiply 2
add
pop local 1
push local 6
push constant 0
eq
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push local 1
call Memory.peek 1
pop local 2
push local 2
push local 3
push argument 0
add
pop pointer 1
push that 0
call Sprites.xor 2
pop local 10
push local 8
push local 2
push local 3
push argument 0
add
pop pointer 1
push that 0
or
push local 10
eq
not
or
pop local 8
push local 1
push local 10
call Memory.poke 2
pop temp 0
goto IF_END1
label IF_FALSE1
push local 1
call Memory.peek 1
pop local 2
push local 3
push argument 0
add
pop pointer 1
push that 0
push local 6
call Sprites.shiftLeft 2
push local 4
and
pop local 9
push local 2
push local 9
call Sprites.xor 2
pop local 10
push local 8
push local 2
push local 9
or
push local 10
eq
not
or
pop local 8
push local 1
push local 10
call Memory.poke 2
pop temp 0
push local 1
push constant 1
add
call Memory.peek 1
pop local 2
push local 3
push argument 0
add
pop pointer 1
push that 0
push local 7
call Sprites.shiftRight 2
push local 5
and
pop local 9
push local 2
push local 9
call Sprites.xor 2
pop local 10
push local 8
push local 2
push local 9
or
push local 10
eq
not
or
pop local 8
push local 1
push constant 1
add
push local 10
call Memory.poke 2
pop temp 0
label IF_END1
push local 3
push constant 1
add
pop local 3
goto WHILE_EXP0
label WHILE_END0
push local 8
return
function Sprites.drawSprite 8
push argument 1
push constant 511
gt
push argument 2
or
push constant 255
gt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
label IF_FALSE0
push constant 16384
push constant 32
push argument 2
call Math.multiply 2
add
push argument 1
push constant 16
call Math.divide 2
add
pop local 0
push argument 1
push constant 16
call Util.mod 2
pop local 6
push constant 16
push local 6
sub
pop local 7
push local 6
push static 1
add
pop pointer 1
push that 0
pop local 5
push local 5
not
pop local 4
push constant 0
pop local 3
label WHILE_EXP0
push local 3
push constant 8
lt
not
if-goto WHILE_END0
push local 6
push constant 0
eq
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push local 0
push local 3
push constant 32
call Math.multiply 2
add
push local 3
push argument 0
add
pop pointer 1
push that 0
call Memory.poke 2
pop temp 0
goto IF_END1
label IF_FALSE1
push local 0
push local 3
push constant 32
call Math.multiply 2
add
pop local 1
push local 1
call Memory.peek 1
pop local 2
push local 1
push local 2
push local 5
and
push local 3
push argument 0
add
pop pointer 1
push that 0
push local 6
call Sprites.shiftLeft 2
push local 4
and
or
call Memory.poke 2
pop temp 0
push local 1
push constant 1
add
call Memory.peek 1
pop local 2
push local 1
push constant 1
add
push local 3
push argument 0
add
pop pointer 1
push that 0
push local 7
call Sprites.shiftRight 2
push local 5
and
push local 2
push local 4
and
or
call Memory.poke 2
pop temp 0
label IF_END1
push local 3
push constant 1
add
pop local 3
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function Sprites.eraseSprite 10
push argument 1
push constant 511
gt
push argument 2
or
push constant 255
gt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
label IF_FALSE0
push constant 16384
push constant 32
push argument 2
call Math.multiply 2
add
push argument 1
push constant 16
call Math.divide 2
add
pop local 0
push argument 1
push constant 16
call Util.mod 2
pop local 6
push constant 16
push local 6
sub
pop local 7
push local 6
push static 1
add
pop pointer 1
push that 0
pop local 5
push local 5
not
pop local 4
push constant 0
pop local 3
label WHILE_EXP0
push local 3
push constant 8
lt
not
if-goto WHILE_END0
push local 0
push local 3
push constant 32
call Math.multiply 2
add
pop local 1
push local 6
push constant 0
eq
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push local 1
call Memory.peek 1
pop local 2
push local 3
push argument 0
add
pop pointer 1
push that 0
not
pop local 8
push local 1
push local 2
push local 8
and
call Memory.poke 2
pop temp 0
goto IF_END1
label IF_FALSE1
push local 1
call Memory.peek 1
pop local 2
push local 3
push argument 0
add
pop pointer 1
push that 0
push local 6
call Sprites.shiftLeft 2
not
pop local 8
push local 1
push local 2
push local 8
and
call Memory.poke 2
pop temp 0
push local 1
push constant 1
add
call Memory.peek 1
pop local 2
push local 3
push argument 0
add
pop pointer 1
push that 0
push local 7
call Sprites.shiftRight 2
not
pop local 8
push local 1
push constant 1
add
push local 2
push local 8
and
call Memory.poke 2
pop temp 0
label IF_END1
push local 3
push constant 1
add
pop local 3
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function Sprites.clearXY 0
push static 2
push argument 0
push argument 1
call Sprites.drawSprite 3
pop temp 0
push constant 0
return
function Sprites.shiftRight 0
push argument 1
push constant 15
gt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
return
goto IF_END0
label IF_FALSE0
push argument 0
push argument 1
push static 0
add
pop pointer 1
push that 0
call Math.divide 2
return
label IF_END0
function Sprites.shiftLeft 1
push argument 1
push constant 15
gt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
return
goto IF_END0
label IF_FALSE0
push constant 0
pop local 0
label WHILE_EXP0
push local 0
push argument 1
lt
not
if-goto WHILE_END0
push argument 0
push argument 0
add
pop argument 0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push argument 0
return
label IF_END0
function Util.outputMessage 0
push argument 1
push argument 2
call Output.moveCursor 2
pop temp 0
push argument 0
call Output.printString 1
pop temp 0
push argument 0
call String.dispose 1
pop temp 0
push constant 0
return
function Util.clearScreen 1
push constant 16384
pop local 0
label WHILE_EXP0
push local 0
push constant 24576
lt
not
if-goto WHILE_END0
push local 0
push constant 1
neg
call Memory.poke 2
pop temp 0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function Util.mod 0
push argument 0
push argument 0
push argument 1
call Math.divide 2
push argument 1
call Math.multiply 2
sub
return
